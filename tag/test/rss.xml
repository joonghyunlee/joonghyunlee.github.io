<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>joonghyunlee.github.io</title>
   
   <link></link>
   <description>A beautiful narrative written with the world's most elegant publishing platform. The story begins here.</description>
   <language>en-uk</language>
   <managingEditor> </managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Tox: Python Test Automation Framework</title>
	  <link>//tox</link>
	  <author></author>
	  <pubDate>2020-01-31T18:00:00-06:00</pubDate>
	  <guid>//tox</guid>
	  <description><![CDATA[
	     <p>Tox는 Python 프로젝트에 대한 테스트 자동화를 지원해주는 도구이다. Python 2 또는 3 등 다양한 환경에서의 테스트를 지원하고자 <code class="highlighter-rouge">virtualenv</code>를 기반으로 테스트 환경을 구성하고, 사전에 지정한 대로 테스트를 진행할 수 있게끔 해준다. Tox는 아래와 같이 <code class="highlighter-rouge">tox.ini</code>파일을 기반으로 설정하게 된다.</p>

<ul>
  <li><code class="highlighter-rouge">tox.ini</code></li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># content of: tox.ini , put in same dir as setup.py
[tox]
envlist = py27,py36

[testenv]
# install testing framework
# ... or install anything else you might need here
deps = pytest
# run the tests
# ... or run any other command line tool you need to run here
commands = pytest
</code></pre></div></div>

<h2 id="설정">설정</h2>

<p>Tox의 동작을 보다 잘 이해하기 위해 우선 <code class="highlighter-rouge">tox.ini</code>파일의 내용을 살펴보자.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[tox]
envlist = py27,py36
install_command = pip install {opts} {packages}
</code></pre></div></div>
<p>가장 먼저 실행할 환경 목록을 기술한다. 위 설정 파일에서는 python 2.7/3.6을 지정하고 있다. 기본적으로 제공하고 있는 환경 목록은 아래와 같다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>py, py2, py27, py3, py34, py35, py36, py37, py38, jython, pypy, pypy2, pypy27, pypy3, pypy35
</code></pre></div></div>

<p>위의 목록 중 <code class="highlighter-rouge">py</code> 의 경우 tox를 실행한 Python version을 사용하게 된다.</p>

<p>다음으로 <code class="highlighter-rouge">[testenv]</code> 항목에는 모든 환경에서 공통적으로 실행할 설정들을 기술한다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[testenv]
# python interpreter
basepython =
   py26: python2.6
   py27: python2.7
# install testing framework
# ... or install anything else you might need here
deps = pytest
# run the tests
# ... or run any other command line tool you need to run here
commands = pytest
</code></pre></div></div>

<p>다음으로 특정 환경을 지정하여 추가적으로 더할 설정들을 기술한다. 이를 위해 <code class="highlighter-rouge">[testenv:NAME]</code>와 같이 환경 이름을 지정한다. 각 필드 별로도 환경 이름이나 부분 문자열을 지정하면, tox가 매칭되는 환경을 찾아 지정한 설정을 적용한다.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>deps =
    pytest
    django15: Django&gt;=1.5,&lt;1.6
    django16: Django&gt;=1.6,&lt;1.7
    django17: Django&gt;=1.7,&lt;1.8
    django18: Django&gt;=1.8,&lt;1.9
    py26: unittest2
</code></pre></div></div>
<p>위의 예제는 환경 이름이 <code class="highlighter-rouge">django15</code>이거나 해당 문자열이 포함되는 경우 <code class="highlighter-rouge">Django&gt;=1.5,&lt;1.6</code>이 설치되도록 설정한 것을 보여준다.</p>

<p>설치되어야 하는 패키지가 많은 경우 <code class="highlighter-rouge">pip</code>를 사용하듯이 <code class="highlighter-rouge">requirements.txt</code>를 지정할 수 도 있다.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>deps =
    -r{toxinidir}/test-requirements.txt
</code></pre></div></div>
<p><code class="highlighter-rouge">commands</code>에는 테스트를 실행하기 위한 명령을 기술한다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>commands =
    python test.py
</code></pre></div></div>

<p>기본적으로 모든 <code class="highlighter-rouge">commands</code>는 <code class="highlighter-rouge">{toxinidir}</code> 즉, <code class="highlighter-rouge">tox.ini</code>파일이 존재하는 디렉토리에서 실행된다.  이 때 작업 디렉토리를 변경하고 싶다면 <code class="highlighter-rouge">changedir</code>에 명시하면 된다.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[testenv:docs]
changedir = docs
deps =
    sphinx
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html
basepython = python3.7
</code></pre></div></div>
<p>이 외의 다양한 설정은 공식 문서(<a href="https://tox.readthedocs.io/en/latest/config.html">https://tox.readthedocs.io/en/latest/config.html</a>)를 참고한다.</p>

<h2 id="실행-방법">실행 방법</h2>

<p>간단히 아래와 같이 실행하면 전체 테스트를 수행하게 된다.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tox
</code></pre></div></div>
<p>특정 환경을 지정해서 실행할 수 있다.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tox -e py27
</code></pre></div></div>
<p>만약 패키지 설치를 포함하여 환경을 재구성하고 싶다면 다음과 같이 실행한다.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tox -r
</code></pre></div></div>

<h2 id="참고-자료">참고 자료</h2>

<ul>
  <li><a href="https://en.wikipedia.org/wiki/Tox_(Python_testing_wrapper)">https://en.wikipedia.org/wiki/Tox_(Python_testing_wrapper)</a></li>
  <li><a href="https://tox.readthedocs.io/en/latest/example/basic.html#a-simple-tox-ini-default-environments">https://tox.readthedocs.io/en/latest/example/basic.html#a-simple-tox-ini-default-environments</a></li>
  <li><a href="https://waprin.io/2015/05/21/introducing-tox.html">https://waprin.io/2015/05/21/introducing-tox.html</a></li>
</ul>

	  ]]></description>
	</item>


</channel>
</rss>
